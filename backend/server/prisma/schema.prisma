// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  password_hash String
  email         String?      @unique
  full_name     String?
  lists         List[]
  sharedItems   SharedList[]
  sharedWith    SharedList[] @relation("SharedWith")
}

model List {
  id         Int          @id @default(autoincrement())
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  list_type  String
  list_name  String
  items      Item[]
  sharedWith SharedList[]
}

model Item {
  id         Int          @id @default(autoincrement())
  list       List         @relation(fields: [listId], references: [id])
  listId     Int
  item_name  String
  quantity   Int?
  unit       String?
  checked    Boolean      @default(false)
  category   String?
  notes      String?
  SharedList SharedList[]
}

model SharedList {
  user                User   @relation(fields: [userId], references: [id])
  userId              Int
  item                Item   @relation(fields: [item_id], references: [id])
  item_id             Int
  sharedWith          User   @relation("SharedWith", fields: [shared_with_user_id], references: [id])
  shared_with_user_id Int
  permission_level    String @default("read")
  List                List?  @relation(fields: [listId], references: [id])
  listId              Int?

  @@unique([userId, item_id, shared_with_user_id])
}
