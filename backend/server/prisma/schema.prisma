// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  password_hash String
  email         String?      @unique
  full_name     String?
  lists         List[]
  sharedItems   SharedList[]
  sharedWith    SharedList[] @relation("SharedWith")
}

model List {
  id         Int          @id @default(autoincrement())
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  listType   String       @map("list_type")
  listName   String       @map("list_name")
  items      Item[]
  sharedWith SharedList[]
}

model Item {
  id         Int          @id @default(autoincrement())
  list       List         @relation(fields: [listId], references: [id])
  listId     Int
  itemName   String       @map("item_name")
  quantity   Int?
  unit       String?
  checked    Boolean      @default(false)
  category   String?
  notes      String?
  SharedList SharedList[]
}

model SharedList {
  user             User   @relation(fields: [userId], references: [id])
  userId           Int
  item             Item   @relation(fields: [itemId], references: [id])
  itemId           Int    @map("item_id")
  sharedWith       User   @relation("SharedWith", fields: [sharedWithUserId], references: [id])
  sharedWithUserId Int    @map("shared_with_user_id")
  permissionLevel  String @default("read") @map("permission_level")
  List             List?  @relation(fields: [listId], references: [id])
  listId           Int?

  @@unique([userId, itemId, sharedWithUserId])
}
